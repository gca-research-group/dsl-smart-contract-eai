import operations.*


Contract CreditAgency {
	
	beginDate = "2021-08-22 10:22:00"
	dueDate = "2021-08-23 10:22:00"
	
	application = creditAgency: "A profit company that collects information about individuals' 
								and businesses' debts and assigns"
	process = integrationProcess: "Process that integrates credit agency activities"
	
	Right requestScore {
		description = "Setting the limit operation by day and the number of user by request"
		rolePlayer integrationProcess 
		rolePlayer.perform( Operation.POLL)
		
		condition {
			OperationsLimit(1000 by Second) AND MessageContent("count(//CPF)=1")	

		}
		
		onBreach (notifyFailing, "Request limit by day exceeded or inconsistent message content")
	}
	
	Prohibition requestScoreP {
		description = "Setting the times that when it is prohibited to send a request"	
		rolePlayer integrationProcess
		rolePlayer.perform(Operation.REQUEST)
		
		condition {		
			BusinessTime("18:30:00" to "7:30:00" )
		}	
		onBreach(notifyFailing, "Request made outside of allowed hours")
	}
	
	Obligation responseWithScore {
		description = "Setting the time limit for responding to a resquest"	
		rolePlayer creditAgency
		rolePlayer.perform(Operation.RESPONSE)
		
		condition{
			Timeout(60) 
		}
		onBreach(notifyFailing, "Timeout for replying has been exceeded")	
	}
	
	EventLog notifyFailing(message : String )
	
} 
