Contract FlightFacade {

	beginDate = "2021-09-23 17:00:00"
	dueDate =   "2022-09-23 12:00:00"
	
	application=  "Flight Facade"
	process=	  "Integration Process"	
	
		
	// variavel
	timestamp: DateTime = DateTime.now()
	
	Right requestRight{
		description = "Setting days and times to requesting flights"	
		rolePlayer = process
		rolePlayer.perform(Operation.REQUEST)		
		
		condition{		
			BusinessTime.setBusinessDay(Period.anyDay()) AND
			BusinessTime.specificTimeGap(6:00, 22:59) AND
			OperationByInterval(100, Period.byMinute()) AND
			MessageContent.evaluate("XPATH_EXPRESSION" )	//trip == 1"
			MessageContent.evaluate("XPATH_EXPRESSION" ) //origin != //destiny
		}
		onBreach(notifyFailing, "Breach of condition in the travel request");		
	}
	
	Prohibition requestProhibition{
		description= "Setting disallowed hours and limits of operations by time interval"	
		rolePlayer= process
		rolePlayer.perform(Operation.REQUEST)	
		
		condition{				
			BusinessTime.specificTimeGap(00:00, 5:59) OR			
			MessageContent.evaluate("XPATH_EXPRESSION")//trip  > 1
		} 
		onBreach(notifyFailing, "Request made outside of allowed hours, ...");
	}
			
			
	Obligation responseObligation{
		description = "Setting the time limit for responding to a resquest"	
		rolePlayer = application
		rolePlayer.perform(Operation.RESPONSE)
		
		condition {				
			Timeout(5)	AND
			(
				MessageContent.evaluate("XPATH_EXPRESSION -> //flight != EMPTY ")
				AND
				MessageContent.evaluate(XPATH_EXPRESSION -> //destinyResponse == //destinyRequest)AND
				MessageContent.evaluate(XPATH_EXPRESSION -> //originResponse  == //originRequest)
			)
		}
		onBreach(notifyFailing, "The timeout exceeded or inconsistent response message");	
	}
	
	Action notifyFailing(message : String){
			notifyParties(message)
	}
	
	
}