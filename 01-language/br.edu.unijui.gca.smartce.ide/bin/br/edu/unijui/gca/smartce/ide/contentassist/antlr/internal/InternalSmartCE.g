/*
 * generated by Xtext 2.26.0
 */
grammar InternalSmartCE;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.edu.unijui.gca.smartce.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.edu.unijui.gca.smartce.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.edu.unijui.gca.smartce.services.SmartCEGrammarAccess;

}
@parser::members {
	private SmartCEGrammarAccess grammarAccess;

	public void setGrammarAccess(SmartCEGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContract
entryRuleContract
:
{ before(grammarAccess.getContractRule()); }
	 ruleContract
{ after(grammarAccess.getContractRule()); } 
	 EOF 
;

// Rule Contract
ruleContract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContractAccess().getGroup()); }
		(rule__Contract__Group__0)
		{ after(grammarAccess.getContractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClause
entryRuleClause
:
{ before(grammarAccess.getClauseRule()); }
	 ruleClause
{ after(grammarAccess.getClauseRule()); } 
	 EOF 
;

// Rule Clause
ruleClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClauseAccess().getGroup()); }
		(rule__Clause__Group__0)
		{ after(grammarAccess.getClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBusinessRule
entryRuleBusinessRule
:
{ before(grammarAccess.getBusinessRuleRule()); }
	 ruleBusinessRule
{ after(grammarAccess.getBusinessRuleRule()); } 
	 EOF 
;

// Rule BusinessRule
ruleBusinessRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBusinessRuleAccess().getAlternatives()); }
		(rule__BusinessRule__Alternatives)
		{ after(grammarAccess.getBusinessRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositeCondition
entryRuleCompositeCondition
:
{ before(grammarAccess.getCompositeConditionRule()); }
	 ruleCompositeCondition
{ after(grammarAccess.getCompositeConditionRule()); } 
	 EOF 
;

// Rule CompositeCondition
ruleCompositeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getGroup()); }
		(rule__CompositeCondition__Group__0)
		{ after(grammarAccess.getCompositeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOperator
entryRuleLogicalOperator
:
{ before(grammarAccess.getLogicalOperatorRule()); }
	 ruleLogicalOperator
{ after(grammarAccess.getLogicalOperatorRule()); } 
	 EOF 
;

// Rule LogicalOperator
ruleLogicalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getNameAssignment()); }
		(rule__LogicalOperator__NameAssignment)
		{ after(grammarAccess.getLogicalOperatorAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeout
entryRuleTimeout
:
{ before(grammarAccess.getTimeoutRule()); }
	 ruleTimeout
{ after(grammarAccess.getTimeoutRule()); } 
	 EOF 
;

// Rule Timeout
ruleTimeout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeoutAccess().getGroup()); }
		(rule__Timeout__Group__0)
		{ after(grammarAccess.getTimeoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationsLimit
entryRuleOperationsLimit
:
{ before(grammarAccess.getOperationsLimitRule()); }
	 ruleOperationsLimit
{ after(grammarAccess.getOperationsLimitRule()); } 
	 EOF 
;

// Rule OperationsLimit
ruleOperationsLimit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationsLimitAccess().getGroup()); }
		(rule__OperationsLimit__Group__0)
		{ after(grammarAccess.getOperationsLimitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBusinessDay
entryRuleBusinessDay
:
{ before(grammarAccess.getBusinessDayRule()); }
	 ruleBusinessDay
{ after(grammarAccess.getBusinessDayRule()); } 
	 EOF 
;

// Rule BusinessDay
ruleBusinessDay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBusinessDayAccess().getGroup()); }
		(rule__BusinessDay__Group__0)
		{ after(grammarAccess.getBusinessDayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBusinessTime
entryRuleBusinessTime
:
{ before(grammarAccess.getBusinessTimeRule()); }
	 ruleBusinessTime
{ after(grammarAccess.getBusinessTimeRule()); } 
	 EOF 
;

// Rule BusinessTime
ruleBusinessTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBusinessTimeAccess().getGroup()); }
		(rule__BusinessTime__Group__0)
		{ after(grammarAccess.getBusinessTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessageContent
entryRuleMessageContent
:
{ before(grammarAccess.getMessageContentRule()); }
	 ruleMessageContent
{ after(grammarAccess.getMessageContentRule()); } 
	 EOF 
;

// Rule MessageContent
ruleMessageContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageContentAccess().getGroup()); }
		(rule__MessageContent__Group__0)
		{ after(grammarAccess.getMessageContentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnSuccess
entryRuleOnSuccess
:
{ before(grammarAccess.getOnSuccessRule()); }
	 ruleOnSuccess
{ after(grammarAccess.getOnSuccessRule()); } 
	 EOF 
;

// Rule OnSuccess
ruleOnSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnSuccessAccess().getGroup()); }
		(rule__OnSuccess__Group__0)
		{ after(grammarAccess.getOnSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnBreach
entryRuleOnBreach
:
{ before(grammarAccess.getOnBreachRule()); }
	 ruleOnBreach
{ after(grammarAccess.getOnBreachRule()); } 
	 EOF 
;

// Rule OnBreach
ruleOnBreach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnBreachAccess().getGroup()); }
		(rule__OnBreach__Group__0)
		{ after(grammarAccess.getOnBreachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getAlternatives()); }
		(rule__Negation__Alternatives)
		{ after(grammarAccess.getNegationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlus
entryRulePlus
:
{ before(grammarAccess.getPlusRule()); }
	 rulePlus
{ after(grammarAccess.getPlusRule()); } 
	 EOF 
;

// Rule Plus
rulePlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusAccess().getGroup()); }
		(rule__Plus__Group__0)
		{ after(grammarAccess.getPlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegative
entryRuleNegative
:
{ before(grammarAccess.getNegativeRule()); }
	 ruleNegative
{ after(grammarAccess.getNegativeRule()); } 
	 EOF 
;

// Rule Negative
ruleNegative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegativeAccess().getAlternatives()); }
		(rule__Negative__Alternatives)
		{ after(grammarAccess.getNegativeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralValue
entryRuleLiteralValue
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralValueAccess().getAlternatives()); }
		(rule__LiteralValue__Alternatives)
		{ after(grammarAccess.getLiteralValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericValue
entryRuleNumericValue
:
{ before(grammarAccess.getNumericValueRule()); }
	 ruleNumericValue
{ after(grammarAccess.getNumericValueRule()); } 
	 EOF 
;

// Rule NumericValue
ruleNumericValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValueAccess().getValueAssignment()); }
		(rule__NumericValue__ValueAssignment)
		{ after(grammarAccess.getNumericValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
		(rule__StringValue__ValueAssignment)
		{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValue
entryRuleVariableValue
:
{ before(grammarAccess.getVariableValueRule()); }
	 ruleVariableValue
{ after(grammarAccess.getVariableValueRule()); } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueAssignment()); }
		(rule__VariableValue__ValueAssignment)
		{ after(grammarAccess.getVariableValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYEAR
entryRuleYEAR
:
{ before(grammarAccess.getYEARRule()); }
	 ruleYEAR
{ after(grammarAccess.getYEARRule()); } 
	 EOF 
;

// Rule YEAR
ruleYEAR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYEARAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getYEARAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMONTH
entryRuleMONTH
:
{ before(grammarAccess.getMONTHRule()); }
	 ruleMONTH
{ after(grammarAccess.getMONTHRule()); } 
	 EOF 
;

// Rule MONTH
ruleMONTH 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMONTHAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getMONTHAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDAY
entryRuleDAY
:
{ before(grammarAccess.getDAYRule()); }
	 ruleDAY
{ after(grammarAccess.getDAYRule()); } 
	 EOF 
;

// Rule DAY
ruleDAY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDAYAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getDAYAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHOUR
entryRuleHOUR
:
{ before(grammarAccess.getHOURRule()); }
	 ruleHOUR
{ after(grammarAccess.getHOURRule()); } 
	 EOF 
;

// Rule HOUR
ruleHOUR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHOURAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getHOURAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMIN
entryRuleMIN
:
{ before(grammarAccess.getMINRule()); }
	 ruleMIN
{ after(grammarAccess.getMINRule()); } 
	 EOF 
;

// Rule MIN
ruleMIN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMINAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getMINAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSEC
entryRuleSEC
:
{ before(grammarAccess.getSECRule()); }
	 ruleSEC
{ after(grammarAccess.getSECRule()); } 
	 EOF 
;

// Rule SEC
ruleSEC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSECAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getSECAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operation
ruleOperation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WeekDay
ruleWeekDay
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDayAccess().getAlternatives()); }
		(rule__WeekDay__Alternatives)
		{ after(grammarAccess.getWeekDayAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TimeUnit
ruleTimeUnit
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
		(rule__TimeUnit__Alternatives)
		{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getRightKeyword_0_0()); }
		'Right'
		{ after(grammarAccess.getClauseAccess().getRightKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getProhibitionKeyword_0_1()); }
		'Prohibition'
		{ after(grammarAccess.getClauseAccess().getProhibitionKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getObligationKeyword_0_2()); }
		'Obligation'
		{ after(grammarAccess.getClauseAccess().getObligationKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Alternatives_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getGroup_16_0()); }
		(rule__Clause__Group_16_0__0)
		{ after(grammarAccess.getClauseAccess().getGroup_16_0()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getGroup_16_1()); }
		(rule__Clause__Group_16_1__0)
		{ after(grammarAccess.getClauseAccess().getGroup_16_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getBusinessRuleParserRuleCall_0()); }
		ruleBusinessRule
		{ after(grammarAccess.getConditionAccess().getBusinessRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall_1()); }
		ruleCompositeCondition
		{ after(grammarAccess.getConditionAccess().getCompositeConditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBusinessRuleAccess().getTimeoutParserRuleCall_0()); }
		ruleTimeout
		{ after(grammarAccess.getBusinessRuleAccess().getTimeoutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBusinessRuleAccess().getOperationsLimitParserRuleCall_1()); }
		ruleOperationsLimit
		{ after(grammarAccess.getBusinessRuleAccess().getOperationsLimitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBusinessRuleAccess().getBusinessDayParserRuleCall_2()); }
		ruleBusinessDay
		{ after(grammarAccess.getBusinessRuleAccess().getBusinessDayParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBusinessRuleAccess().getBusinessTimeParserRuleCall_3()); }
		ruleBusinessTime
		{ after(grammarAccess.getBusinessRuleAccess().getBusinessTimeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBusinessRuleAccess().getMessageContentParserRuleCall_4()); }
		ruleMessageContent
		{ after(grammarAccess.getBusinessRuleAccess().getMessageContentParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getNameANDKeyword_0_0()); }
		'AND'
		{ after(grammarAccess.getLogicalOperatorAccess().getNameANDKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getNameORKeyword_0_1()); }
		'OR'
		{ after(grammarAccess.getLogicalOperatorAccess().getNameORKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getNameNOTKeyword_0_2()); }
		'NOT'
		{ after(grammarAccess.getLogicalOperatorAccess().getNameNOTKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getGroup_0()); }
		(rule__Action__Group_0__0)
		{ after(grammarAccess.getActionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGroup_1()); }
		(rule__Action__Group_1__0)
		{ after(grammarAccess.getActionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1_0()); }
		(rule__Expression__SymbolAssignment_1_1_0)
		{ after(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1_1()); }
		(rule__Expression__SymbolAssignment_1_1_1)
		{ after(grammarAccess.getExpressionAccess().getSymbolAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getComparisonParserRuleCall_0()); }
		ruleComparison
		{ after(grammarAccess.getNegationAccess().getComparisonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNegationAccess().getGroup_1()); }
		(rule__Negation__Group_1__0)
		{ after(grammarAccess.getNegationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_0()); }
		(rule__Comparison__SymbolAssignment_1_1_0)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_1()); }
		(rule__Comparison__SymbolAssignment_1_1_1)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_2()); }
		(rule__Comparison__SymbolAssignment_1_1_2)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_3()); }
		(rule__Comparison__SymbolAssignment_1_1_3)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_4()); }
		(rule__Comparison__SymbolAssignment_1_1_4)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_5()); }
		(rule__Comparison__SymbolAssignment_1_1_5)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_5()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_6()); }
		(rule__Comparison__SymbolAssignment_1_1_6)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_6()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_7()); }
		(rule__Comparison__SymbolAssignment_1_1_7)
		{ after(grammarAccess.getComparisonAccess().getSymbolAssignment_1_1_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusAccess().getPlusSignKeyword_1_1_0()); }
		'+'
		{ after(grammarAccess.getPlusAccess().getPlusSignKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusAccess().getHyphenMinusKeyword_1_1_1()); }
		'-'
		{ after(grammarAccess.getPlusAccess().getHyphenMinusKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_1_0()); }
		'*'
		{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_1_1()); }
		'/'
		{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegativeAccess().getPrimaryParserRuleCall_0()); }
		rulePrimary
		{ after(grammarAccess.getNegativeAccess().getPrimaryParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNegativeAccess().getGroup_1()); }
		(rule__Negative__Group_1__0)
		{ after(grammarAccess.getNegativeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getLiteralValueParserRuleCall_0()); }
		ruleLiteralValue
		{ after(grammarAccess.getPrimaryAccess().getLiteralValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralValueAccess().getNumericValueParserRuleCall_0()); }
		ruleNumericValue
		{ after(grammarAccess.getLiteralValueAccess().getNumericValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralValueAccess().getStringValueParserRuleCall_1()); }
		ruleStringValue
		{ after(grammarAccess.getLiteralValueAccess().getStringValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralValueAccess().getVariableValueParserRuleCall_2()); }
		ruleVariableValue
		{ after(grammarAccess.getLiteralValueAccess().getVariableValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralValueAccess().getFunctionCallParserRuleCall_3()); }
		ruleFunctionCall
		{ after(grammarAccess.getLiteralValueAccess().getFunctionCallParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getPUSHEnumLiteralDeclaration_0()); }
		('push')
		{ after(grammarAccess.getOperationAccess().getPUSHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getPOLLEnumLiteralDeclaration_1()); }
		('poll')
		{ after(grammarAccess.getOperationAccess().getPOLLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getWRITEEnumLiteralDeclaration_2()); }
		('write')
		{ after(grammarAccess.getOperationAccess().getWRITEEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getREADEnumLiteralDeclaration_3()); }
		('read')
		{ after(grammarAccess.getOperationAccess().getREADEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getREQUESTEnumLiteralDeclaration_4()); }
		('request')
		{ after(grammarAccess.getOperationAccess().getREQUESTEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getRESPONSEEnumLiteralDeclaration_5()); }
		('response')
		{ after(grammarAccess.getOperationAccess().getRESPONSEEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeekDay__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0()); }
		('Sunday')
		{ after(grammarAccess.getWeekDayAccess().getSUNDAYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1()); }
		('Monday')
		{ after(grammarAccess.getWeekDayAccess().getMONDAYEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2()); }
		('Tuesday')
		{ after(grammarAccess.getWeekDayAccess().getTUESDAYEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3()); }
		('Wednesday')
		{ after(grammarAccess.getWeekDayAccess().getWEDNESDAYEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4()); }
		('Thursday')
		{ after(grammarAccess.getWeekDayAccess().getTHURSDAYEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5()); }
		('Friday')
		{ after(grammarAccess.getWeekDayAccess().getFRIDAYEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6()); }
		('Saturday')
		{ after(grammarAccess.getWeekDayAccess().getSATURDAYEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0()); }
		('Second')
		{ after(grammarAccess.getTimeUnitAccess().getSECONDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1()); }
		('Minute')
		{ after(grammarAccess.getTimeUnitAccess().getMINUTEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2()); }
		('Hour')
		{ after(grammarAccess.getTimeUnitAccess().getHOUREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3()); }
		('Day')
		{ after(grammarAccess.getTimeUnitAccess().getDAYEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4()); }
		('Week')
		{ after(grammarAccess.getTimeUnitAccess().getWEEKEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5()); }
		('Month')
		{ after(grammarAccess.getTimeUnitAccess().getMONTHEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6()); }
		('Year')
		{ after(grammarAccess.getTimeUnitAccess().getYEAREnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportsAssignment_1()); }
	(rule__Model__ImportsAssignment_1)*
	{ after(grammarAccess.getModelAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractsAssignment_2()); }
	(rule__Model__ContractsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getContractsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__0__Impl
	rule__Contract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getContractKeyword_0()); }
	'Contract'
	{ after(grammarAccess.getContractAccess().getContractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__1__Impl
	rule__Contract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getNameAssignment_1()); }
	(rule__Contract__NameAssignment_1)
	{ after(grammarAccess.getContractAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__2__Impl
	rule__Contract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContractAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__3__Impl
	rule__Contract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getBeginDateKeyword_3()); }
	'beginDate'
	{ after(grammarAccess.getContractAccess().getBeginDateKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__4__Impl
	rule__Contract__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getContractAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__5__Impl
	rule__Contract__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getBeginDateAssignment_5()); }
	(rule__Contract__BeginDateAssignment_5)
	{ after(grammarAccess.getContractAccess().getBeginDateAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__6__Impl
	rule__Contract__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getDueDateKeyword_6()); }
	'dueDate'
	{ after(grammarAccess.getContractAccess().getDueDateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__7__Impl
	rule__Contract__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getContractAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__8__Impl
	rule__Contract__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getDueDateAssignment_8()); }
	(rule__Contract__DueDateAssignment_8)
	{ after(grammarAccess.getContractAccess().getDueDateAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__9__Impl
	rule__Contract__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getApplicationKeyword_9()); }
	'application'
	{ after(grammarAccess.getContractAccess().getApplicationKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__10__Impl
	rule__Contract__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getEqualsSignKeyword_10()); }
	'='
	{ after(grammarAccess.getContractAccess().getEqualsSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__11__Impl
	rule__Contract__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getApplicationAssignment_11()); }
	(rule__Contract__ApplicationAssignment_11)
	{ after(grammarAccess.getContractAccess().getApplicationAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__12__Impl
	rule__Contract__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getProcessKeyword_12()); }
	'process'
	{ after(grammarAccess.getContractAccess().getProcessKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__13__Impl
	rule__Contract__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getEqualsSignKeyword_13()); }
	'='
	{ after(grammarAccess.getContractAccess().getEqualsSignKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__14__Impl
	rule__Contract__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getProcessAssignment_14()); }
	(rule__Contract__ProcessAssignment_14)
	{ after(grammarAccess.getContractAccess().getProcessAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__15__Impl
	rule__Contract__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getClausesAssignment_15()); }
	(rule__Contract__ClausesAssignment_15)*
	{ after(grammarAccess.getContractAccess().getClausesAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__16__Impl
	rule__Contract__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getActionsAssignment_16()); }
	(rule__Contract__ActionsAssignment_16)*
	{ after(grammarAccess.getContractAccess().getActionsAssignment_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contract__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_17()); }
	'}'
	{ after(grammarAccess.getContractAccess().getRightCurlyBracketKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__0__Impl
	rule__Clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getAlternatives_0()); }
	(rule__Clause__Alternatives_0)
	{ after(grammarAccess.getClauseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__1__Impl
	rule__Clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getNameAssignment_1()); }
	(rule__Clause__NameAssignment_1)
	{ after(grammarAccess.getClauseAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__2__Impl
	rule__Clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__3__Impl
	rule__Clause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getDescriptionKeyword_3()); }
	'description'
	{ after(grammarAccess.getClauseAccess().getDescriptionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__4__Impl
	rule__Clause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getClauseAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__5__Impl
	rule__Clause__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getDescriptionAssignment_5()); }
	(rule__Clause__DescriptionAssignment_5)
	{ after(grammarAccess.getClauseAccess().getDescriptionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__6__Impl
	rule__Clause__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getRolePlayerKeyword_6()); }
	'rolePlayer'
	{ after(grammarAccess.getClauseAccess().getRolePlayerKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__7__Impl
	rule__Clause__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getClauseAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__8__Impl
	rule__Clause__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getRolePlayerAssignment_8()); }
	(rule__Clause__RolePlayerAssignment_8)
	{ after(grammarAccess.getClauseAccess().getRolePlayerAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__9__Impl
	rule__Clause__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOperationKeyword_9()); }
	'operation'
	{ after(grammarAccess.getClauseAccess().getOperationKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__10__Impl
	rule__Clause__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getEqualsSignKeyword_10()); }
	'='
	{ after(grammarAccess.getClauseAccess().getEqualsSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__11__Impl
	rule__Clause__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOperationAssignment_11()); }
	(rule__Clause__OperationAssignment_11)
	{ after(grammarAccess.getClauseAccess().getOperationAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__12__Impl
	rule__Clause__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getConditionKeyword_12()); }
	'condition'
	{ after(grammarAccess.getClauseAccess().getConditionKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__13__Impl
	rule__Clause__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_13()); }
	'{'
	{ after(grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__14__Impl
	rule__Clause__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getConditionAssignment_14()); }
	(rule__Clause__ConditionAssignment_14)
	{ after(grammarAccess.getClauseAccess().getConditionAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__15__Impl
	rule__Clause__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_15()); }
	'}'
	{ after(grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__16__Impl
	rule__Clause__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getAlternatives_16()); }
	(rule__Clause__Alternatives_16)
	{ after(grammarAccess.getClauseAccess().getAlternatives_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_17()); }
	'}'
	{ after(grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_16_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_0__0__Impl
	rule__Clause__Group_16_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnSuccessKeyword_16_0_0()); }
	'onSuccess'
	{ after(grammarAccess.getClauseAccess().getOnSuccessKeyword_16_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_0__1__Impl
	rule__Clause__Group_16_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnSuccessAssignment_16_0_1()); }
	(rule__Clause__OnSuccessAssignment_16_0_1)
	{ after(grammarAccess.getClauseAccess().getOnSuccessAssignment_16_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_0__2__Impl
	rule__Clause__Group_16_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnBreachKeyword_16_0_2()); }
	'onBreach'
	{ after(grammarAccess.getClauseAccess().getOnBreachKeyword_16_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnBreachAssignment_16_0_3()); }
	(rule__Clause__OnBreachAssignment_16_0_3)
	{ after(grammarAccess.getClauseAccess().getOnBreachAssignment_16_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_16_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_1__0__Impl
	rule__Clause__Group_16_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnBreachKeyword_16_1_0()); }
	'onBreach'
	{ after(grammarAccess.getClauseAccess().getOnBreachKeyword_16_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group_16_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_16_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getOnBreachAssignment_16_1_1()); }
	(rule__Clause__OnBreachAssignment_16_1_1)
	{ after(grammarAccess.getClauseAccess().getOnBreachAssignment_16_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__0__Impl
	rule__CompositeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_0()); }
	(rule__CompositeCondition__ConditionsAssignment_0)
	{ after(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__1__Impl
	rule__CompositeCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsAssignment_1()); }
	(rule__CompositeCondition__LogicalOperatorsAssignment_1)
	{ after(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__2__Impl
	rule__CompositeCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_2()); }
	(rule__CompositeCondition__ConditionsAssignment_2)
	{ after(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getGroup_3()); }
	(rule__CompositeCondition__Group_3__0)*
	{ after(grammarAccess.getCompositeConditionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeCondition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group_3__0__Impl
	rule__CompositeCondition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsAssignment_3_0()); }
	(rule__CompositeCondition__LogicalOperatorsAssignment_3_0)
	{ after(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompositeCondition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_3_1()); }
	(rule__CompositeCondition__ConditionsAssignment_3_1)
	{ after(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timeout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__0__Impl
	rule__Timeout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getTimeoutKeyword_0()); }
	'Timeout'
	{ after(grammarAccess.getTimeoutAccess().getTimeoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__1__Impl
	rule__Timeout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTimeoutAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__2__Impl
	rule__Timeout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getValueAssignment_2()); }
	(rule__Timeout__ValueAssignment_2)
	{ after(grammarAccess.getTimeoutAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTimeoutAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationsLimit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__0__Impl
	rule__OperationsLimit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getOperationsLimitKeyword_0()); }
	'OperationsLimit'
	{ after(grammarAccess.getOperationsLimitAccess().getOperationsLimitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__1__Impl
	rule__OperationsLimit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOperationsLimitAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__2__Impl
	rule__OperationsLimit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getOperationsNumberAssignment_2()); }
	(rule__OperationsLimit__OperationsNumberAssignment_2)
	{ after(grammarAccess.getOperationsLimitAccess().getOperationsNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__3__Impl
	rule__OperationsLimit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getByKeyword_3()); }
	'by'
	{ after(grammarAccess.getOperationsLimitAccess().getByKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__4__Impl
	rule__OperationsLimit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getTimeUnitAssignment_4()); }
	(rule__OperationsLimit__TimeUnitAssignment_4)
	{ after(grammarAccess.getOperationsLimitAccess().getTimeUnitAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationsLimit__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationsLimitAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getOperationsLimitAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BusinessDay__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__0__Impl
	rule__BusinessDay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getBusinessDayKeyword_0()); }
	'BusinessDay'
	{ after(grammarAccess.getBusinessDayAccess().getBusinessDayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__1__Impl
	rule__BusinessDay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBusinessDayAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__2__Impl
	rule__BusinessDay__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getStartAssignment_2()); }
	(rule__BusinessDay__StartAssignment_2)
	{ after(grammarAccess.getBusinessDayAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__3__Impl
	rule__BusinessDay__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getBusinessDayAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__4__Impl
	rule__BusinessDay__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getEndAssignment_4()); }
	(rule__BusinessDay__EndAssignment_4)
	{ after(grammarAccess.getBusinessDayAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessDay__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessDayAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getBusinessDayAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BusinessTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__0__Impl
	rule__BusinessTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getBusinessTimeKeyword_0()); }
	'BusinessTime'
	{ after(grammarAccess.getBusinessTimeAccess().getBusinessTimeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__1__Impl
	rule__BusinessTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBusinessTimeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__2__Impl
	rule__BusinessTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getStartAssignment_2()); }
	(rule__BusinessTime__StartAssignment_2)
	{ after(grammarAccess.getBusinessTimeAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__3__Impl
	rule__BusinessTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getBusinessTimeAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__4__Impl
	rule__BusinessTime__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getEndAssignment_4()); }
	(rule__BusinessTime__EndAssignment_4)
	{ after(grammarAccess.getBusinessTimeAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BusinessTime__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBusinessTimeAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getBusinessTimeAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageContent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group__0__Impl
	rule__MessageContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getMessageContentKeyword_0()); }
	'MessageContent'
	{ after(grammarAccess.getMessageContentAccess().getMessageContentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group__1__Impl
	rule__MessageContent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMessageContentAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group__2__Impl
	rule__MessageContent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getContentAssignment_2()); }
	(rule__MessageContent__ContentAssignment_2)
	{ after(grammarAccess.getMessageContentAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageContent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMessageContentAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getNameAssignment_0()); }
	(rule__Application__NameAssignment_0)
	{ after(grammarAccess.getApplicationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getApplicationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getDescriptionAssignment_2()); }
	(rule__Application__DescriptionAssignment_2)
	{ after(grammarAccess.getApplicationAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_0()); }
	(rule__Process__NameAssignment_0)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getDescriptionAssignment_2()); }
	(rule__Process__DescriptionAssignment_2)
	{ after(grammarAccess.getProcessAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnSuccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnSuccess__Group__0__Impl
	rule__OnSuccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnSuccessAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getOnSuccessAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnSuccess__Group__1__Impl
	rule__OnSuccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnSuccessAccess().getActionAssignment_1()); }
	(rule__OnSuccess__ActionAssignment_1)
	{ after(grammarAccess.getOnSuccessAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnSuccess__Group__2__Impl
	rule__OnSuccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnSuccessAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getOnSuccessAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnSuccess__Group__3__Impl
	rule__OnSuccess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnSuccessAccess().getMessageAssignment_3()); }
	(rule__OnSuccess__MessageAssignment_3)
	{ after(grammarAccess.getOnSuccessAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnSuccess__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnSuccessAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOnSuccessAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnBreach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnBreach__Group__0__Impl
	rule__OnBreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnBreachAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getOnBreachAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnBreach__Group__1__Impl
	rule__OnBreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnBreachAccess().getActionAssignment_1()); }
	(rule__OnBreach__ActionAssignment_1)
	{ after(grammarAccess.getOnBreachAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnBreach__Group__2__Impl
	rule__OnBreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnBreachAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getOnBreachAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnBreach__Group__3__Impl
	rule__OnBreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnBreachAccess().getMessageAssignment_3()); }
	(rule__OnBreach__MessageAssignment_3)
	{ after(grammarAccess.getOnBreachAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnBreach__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnBreachAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getOnBreachAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getBusinessActionKeyword_0_0()); }
	'BusinessAction'
	{ after(grammarAccess.getActionAccess().getBusinessActionKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__1__Impl
	rule__Action__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_0_1()); }
	(rule__Action__NameAssignment_0_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__2__Impl
	rule__Action__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__3__Impl
	rule__Action__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_0_3()); }
	(rule__Action__ParametersAssignment_0_3)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__4__Impl
	rule__Action__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_0_4()); }
	(rule__Action__Group_0_4__0)*
	{ after(grammarAccess.getActionAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_4__0__Impl
	rule__Action__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getCommaKeyword_0_4_0()); }
	','
	{ after(grammarAccess.getActionAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_0_4_1()); }
	(rule__Action__ParametersAssignment_0_4_1)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getEventLogKeyword_1_0()); }
	'EventLog'
	{ after(grammarAccess.getActionAccess().getEventLogKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1_1()); }
	(rule__Action__NameAssignment_1_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__2__Impl
	rule__Action__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1_2()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__3__Impl
	rule__Action__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_1_3()); }
	(rule__Action__ParametersAssignment_1_3)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__4__Impl
	rule__Action__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_1_4()); }
	(rule__Action__Group_1_4__0)*
	{ after(grammarAccess.getActionAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_4__0__Impl
	rule__Action__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getCommaKeyword_1_4_0()); }
	','
	{ after(grammarAccess.getActionAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getParametersAssignment_1_4_1()); }
	(rule__Action__ParametersAssignment_1_4_1)
	{ after(grammarAccess.getActionAccess().getParametersAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
	(rule__Variable__NameAssignment_0)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVariableAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTypeAssignment_2()); }
	(rule__Variable__TypeAssignment_2)
	{ after(grammarAccess.getVariableAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getNegationParserRuleCall_0()); }
	ruleNegation
	{ after(grammarAccess.getExpressionAccess().getNegationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_1_1()); }
	(rule__Expression__Alternatives_1_1)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
	(rule__Expression__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__0__Impl
	rule__Negation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getUnaryOperatorAction_1_0()); }
	()
	{ after(grammarAccess.getNegationAccess().getUnaryOperatorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__1__Impl
	rule__Negation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
	(rule__Negation__SymbolAssignment_1_1)
	{ after(grammarAccess.getNegationAccess().getSymbolAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getExpressionAssignment_1_2()); }
	(rule__Negation__ExpressionAssignment_1_2)
	{ after(grammarAccess.getNegationAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusParserRuleCall_0()); }
	rulePlus
	{ after(grammarAccess.getComparisonAccess().getPlusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
	rule__Comparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_1_1()); }
	(rule__Comparison__Alternatives_1_1)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
	(rule__Comparison__RightAssignment_1_2)
	{ after(grammarAccess.getComparisonAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Plus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group__0__Impl
	rule__Plus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getPlusAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getGroup_1()); }
	(rule__Plus__Group_1__0)*
	{ after(grammarAccess.getPlusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Plus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group_1__0__Impl
	rule__Plus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPlusAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group_1__1__Impl
	rule__Plus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getAlternatives_1_1()); }
	(rule__Plus__Alternatives_1_1)
	{ after(grammarAccess.getPlusAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Plus__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusAccess().getRightAssignment_1_2()); }
	(rule__Plus__RightAssignment_1_2)
	{ after(grammarAccess.getPlusAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNegativeParserRuleCall_0()); }
	ruleNegative
	{ after(grammarAccess.getFactorAccess().getNegativeParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getBinaryOperatorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getBinaryOperatorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
	rule__Factor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
	(rule__Factor__Alternatives_1_1)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
	(rule__Factor__RightAssignment_1_2)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negative__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negative__Group_1__0__Impl
	rule__Negative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeAccess().getUnaryOperatorAction_1_0()); }
	()
	{ after(grammarAccess.getNegativeAccess().getUnaryOperatorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negative__Group_1__1__Impl
	rule__Negative__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getNegativeAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negative__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegativeAccess().getExpressionAssignment_1_2()); }
	(rule__Negative__ExpressionAssignment_1_2)
	{ after(grammarAccess.getNegativeAccess().getExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
	(rule__FunctionCall__NameAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParamsAssignment_2()); }
	(rule__FunctionCall__ParamsAssignment_2)
	{ after(grammarAccess.getFunctionCallAccess().getParamsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
	(rule__FunctionCall__Group_3__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParamsAssignment_3_1()); }
	(rule__FunctionCall__ParamsAssignment_3_1)
	{ after(grammarAccess.getFunctionCallAccess().getParamsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	'.*'
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContractsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContractsContractParserRuleCall_2_0()); }
		ruleContract
		{ after(grammarAccess.getModelAccess().getContractsContractParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContractAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__BeginDateAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getBeginDateSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getContractAccess().getBeginDateSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__DueDateAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getDueDateSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getContractAccess().getDueDateSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__ApplicationAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getApplicationApplicationParserRuleCall_11_0()); }
		ruleApplication
		{ after(grammarAccess.getContractAccess().getApplicationApplicationParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__ProcessAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getProcessProcessParserRuleCall_14_0()); }
		ruleProcess
		{ after(grammarAccess.getContractAccess().getProcessProcessParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__ClausesAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getClausesClauseParserRuleCall_15_0()); }
		ruleClause
		{ after(grammarAccess.getContractAccess().getClausesClauseParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contract__ActionsAssignment_16
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContractAccess().getActionsActionParserRuleCall_16_0()); }
		ruleAction
		{ after(grammarAccess.getContractAccess().getActionsActionParserRuleCall_16_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClauseAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__DescriptionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getClauseAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__RolePlayerAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getRolePlayerPartyCrossReference_8_0()); }
		(
			{ before(grammarAccess.getClauseAccess().getRolePlayerPartyIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClauseAccess().getRolePlayerPartyIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getClauseAccess().getRolePlayerPartyCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__OperationAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getOperationOperationEnumRuleCall_11_0()); }
		ruleOperation
		{ after(grammarAccess.getClauseAccess().getOperationOperationEnumRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__ConditionAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getConditionConditionParserRuleCall_14_0()); }
		ruleCondition
		{ after(grammarAccess.getClauseAccess().getConditionConditionParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__OnSuccessAssignment_16_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getOnSuccessOnSuccessParserRuleCall_16_0_1_0()); }
		ruleOnSuccess
		{ after(grammarAccess.getClauseAccess().getOnSuccessOnSuccessParserRuleCall_16_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__OnBreachAssignment_16_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getOnBreachOnBreachParserRuleCall_16_0_3_0()); }
		ruleOnBreach
		{ after(grammarAccess.getClauseAccess().getOnBreachOnBreachParserRuleCall_16_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__OnBreachAssignment_16_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getOnBreachOnBreachParserRuleCall_16_1_1_0()); }
		ruleOnBreach
		{ after(grammarAccess.getClauseAccess().getOnBreachOnBreachParserRuleCall_16_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__ConditionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_0_0()); }
		ruleBusinessRule
		{ after(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__LogicalOperatorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsLogicalOperatorParserRuleCall_1_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsLogicalOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__ConditionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_2_0()); }
		ruleBusinessRule
		{ after(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__LogicalOperatorsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsLogicalOperatorParserRuleCall_3_0_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getCompositeConditionAccess().getLogicalOperatorsLogicalOperatorParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeCondition__ConditionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_3_1_0()); }
		ruleBusinessRule
		{ after(grammarAccess.getCompositeConditionAccess().getConditionsBusinessRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getNameAlternatives_0()); }
		(rule__LogicalOperator__NameAlternatives_0)
		{ after(grammarAccess.getLogicalOperatorAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeoutAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__OperationsNumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsLimitAccess().getOperationsNumberINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getOperationsLimitAccess().getOperationsNumberINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationsLimit__TimeUnitAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationsLimitAccess().getTimeUnitTimeUnitEnumRuleCall_4_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getOperationsLimitAccess().getTimeUnitTimeUnitEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBusinessDayAccess().getStartWeekDayEnumRuleCall_2_0()); }
		ruleWeekDay
		{ after(grammarAccess.getBusinessDayAccess().getStartWeekDayEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessDay__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBusinessDayAccess().getEndWeekDayEnumRuleCall_4_0()); }
		ruleWeekDay
		{ after(grammarAccess.getBusinessDayAccess().getEndWeekDayEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBusinessTimeAccess().getStartSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getBusinessTimeAccess().getStartSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BusinessTime__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBusinessTimeAccess().getEndSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getBusinessTimeAccess().getEndSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageContent__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageContentAccess().getContentSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getApplicationAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getProcessAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnSuccessAccess().getActionActionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOnSuccessAccess().getActionActionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOnSuccessAccess().getActionActionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOnSuccessAccess().getActionActionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnSuccess__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnSuccessAccess().getMessageExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getOnSuccessAccess().getMessageExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnBreachAccess().getActionActionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOnBreachAccess().getActionActionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOnBreachAccess().getActionActionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOnBreachAccess().getActionActionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnBreach__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnBreachAccess().getMessageExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getOnBreachAccess().getMessageExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_0_3_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_0_4_1_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_1_3_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParametersAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_1_4_1_0()); }
		ruleVariable
		{ after(grammarAccess.getActionAccess().getParametersVariableParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SymbolAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymbolAmpersandAmpersandKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getSymbolAmpersandAmpersandKeyword_1_1_0_0()); }
			'&&'
			{ after(grammarAccess.getExpressionAccess().getSymbolAmpersandAmpersandKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getSymbolAmpersandAmpersandKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SymbolAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_1_0()); }
			'||'
			{ after(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getSymbolVerticalLineVerticalLineKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightNegationParserRuleCall_1_2_0()); }
		ruleNegation
		{ after(grammarAccess.getExpressionAccess().getRightNegationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__SymbolAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
			'!'
			{ after(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getNegationAccess().getSymbolExclamationMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getExpressionComparisonParserRuleCall_1_2_0()); }
		ruleComparison
		{ after(grammarAccess.getNegationAccess().getExpressionComparisonParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
			'<='
			{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignEqualsSignKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
			'>='
			{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignEqualsSignKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
			'>'
			{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolGreaterThanSignKeyword_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
			'<'
			{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolLessThanSignKeyword_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
			'!='
			{ after(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolExclamationMarkEqualsSignKeyword_1_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
			'=='
			{ after(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolEqualsSignEqualsSignKeyword_1_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
			'is'
			{ after(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolIsKeyword_1_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__SymbolAssignment_1_1_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
		(
			{ before(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
			'as'
			{ after(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
		)
		{ after(grammarAccess.getComparisonAccess().getSymbolAsKeyword_1_1_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRightPlusParserRuleCall_1_2_0()); }
		rulePlus
		{ after(grammarAccess.getComparisonAccess().getRightPlusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Plus__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusAccess().getRightFactorParserRuleCall_1_2_0()); }
		ruleFactor
		{ after(grammarAccess.getPlusAccess().getRightFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightNegativeParserRuleCall_1_2_0()); }
		ruleNegative
		{ after(grammarAccess.getFactorAccess().getRightNegativeParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negative__ExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegativeAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getNegativeAccess().getExpressionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumericValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueQualifiedNameParserRuleCall_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getVariableValueAccess().getValueQualifiedNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getNameQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getFunctionCallAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParamsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParamsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionCallAccess().getParamsExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
