/**
 * generated by Xtext 2.28.0
 */
package br.edu.unijui.gca.jabuti.impl;

import br.edu.unijui.gca.jabuti.Clause;
import br.edu.unijui.gca.jabuti.Condition;
import br.edu.unijui.gca.jabuti.JabutiPackage;
import br.edu.unijui.gca.jabuti.OnBreach;
import br.edu.unijui.gca.jabuti.OnSuccess;
import br.edu.unijui.gca.jabuti.Operation;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Clause</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.jabuti.impl.ClauseImpl#getName <em>Name</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.impl.ClauseImpl#getOperation <em>Operation</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.impl.ClauseImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.impl.ClauseImpl#getOnBreach <em>On Breach</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.impl.ClauseImpl#getOnSuccess <em>On Success</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClauseImpl extends MinimalEObjectImpl.Container implements Clause
{
  /**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected static final String NAME_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected String name = NAME_EDEFAULT;

  /**
	 * The default value of the '{@link #getOperation() <em>Operation</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getOperation()
	 * @generated
	 * @ordered
	 */
  protected static final Operation OPERATION_EDEFAULT = Operation.PUSH;

  /**
	 * The cached value of the '{@link #getOperation() <em>Operation</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getOperation()
	 * @generated
	 * @ordered
	 */
  protected Operation operation = OPERATION_EDEFAULT;

  /**
	 * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getCondition()
	 * @generated
	 * @ordered
	 */
  protected Condition condition;

  /**
	 * The cached value of the '{@link #getOnBreach() <em>On Breach</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getOnBreach()
	 * @generated
	 * @ordered
	 */
  protected OnBreach onBreach;

  /**
	 * The cached value of the '{@link #getOnSuccess() <em>On Success</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getOnSuccess()
	 * @generated
	 * @ordered
	 */
  protected OnSuccess onSuccess;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected ClauseImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return JabutiPackage.Literals.CLAUSE;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getName()
  {
		return name;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setName(String newName)
  {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__NAME, oldName, name));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Operation getOperation()
  {
		return operation;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setOperation(Operation newOperation)
  {
		Operation oldOperation = operation;
		operation = newOperation == null ? OPERATION_EDEFAULT : newOperation;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__OPERATION, oldOperation, operation));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Condition getCondition()
  {
		return condition;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetCondition(Condition newCondition, NotificationChain msgs)
  {
		Condition oldCondition = condition;
		condition = newCondition;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__CONDITION, oldCondition, newCondition);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setCondition(Condition newCondition)
  {
		if (newCondition != condition) {
			NotificationChain msgs = null;
			if (condition != null)
				msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__CONDITION, null, msgs);
			if (newCondition != null)
				msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__CONDITION, null, msgs);
			msgs = basicSetCondition(newCondition, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__CONDITION, newCondition, newCondition));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public OnBreach getOnBreach()
  {
		return onBreach;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetOnBreach(OnBreach newOnBreach, NotificationChain msgs)
  {
		OnBreach oldOnBreach = onBreach;
		onBreach = newOnBreach;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__ON_BREACH, oldOnBreach, newOnBreach);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setOnBreach(OnBreach newOnBreach)
  {
		if (newOnBreach != onBreach) {
			NotificationChain msgs = null;
			if (onBreach != null)
				msgs = ((InternalEObject)onBreach).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__ON_BREACH, null, msgs);
			if (newOnBreach != null)
				msgs = ((InternalEObject)newOnBreach).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__ON_BREACH, null, msgs);
			msgs = basicSetOnBreach(newOnBreach, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__ON_BREACH, newOnBreach, newOnBreach));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public OnSuccess getOnSuccess()
  {
		return onSuccess;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetOnSuccess(OnSuccess newOnSuccess, NotificationChain msgs)
  {
		OnSuccess oldOnSuccess = onSuccess;
		onSuccess = newOnSuccess;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__ON_SUCCESS, oldOnSuccess, newOnSuccess);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setOnSuccess(OnSuccess newOnSuccess)
  {
		if (newOnSuccess != onSuccess) {
			NotificationChain msgs = null;
			if (onSuccess != null)
				msgs = ((InternalEObject)onSuccess).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__ON_SUCCESS, null, msgs);
			if (newOnSuccess != null)
				msgs = ((InternalEObject)newOnSuccess).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.CLAUSE__ON_SUCCESS, null, msgs);
			msgs = basicSetOnSuccess(newOnSuccess, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.CLAUSE__ON_SUCCESS, newOnSuccess, newOnSuccess));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case JabutiPackage.CLAUSE__CONDITION:
				return basicSetCondition(null, msgs);
			case JabutiPackage.CLAUSE__ON_BREACH:
				return basicSetOnBreach(null, msgs);
			case JabutiPackage.CLAUSE__ON_SUCCESS:
				return basicSetOnSuccess(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case JabutiPackage.CLAUSE__NAME:
				return getName();
			case JabutiPackage.CLAUSE__OPERATION:
				return getOperation();
			case JabutiPackage.CLAUSE__CONDITION:
				return getCondition();
			case JabutiPackage.CLAUSE__ON_BREACH:
				return getOnBreach();
			case JabutiPackage.CLAUSE__ON_SUCCESS:
				return getOnSuccess();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case JabutiPackage.CLAUSE__NAME:
				setName((String)newValue);
				return;
			case JabutiPackage.CLAUSE__OPERATION:
				setOperation((Operation)newValue);
				return;
			case JabutiPackage.CLAUSE__CONDITION:
				setCondition((Condition)newValue);
				return;
			case JabutiPackage.CLAUSE__ON_BREACH:
				setOnBreach((OnBreach)newValue);
				return;
			case JabutiPackage.CLAUSE__ON_SUCCESS:
				setOnSuccess((OnSuccess)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case JabutiPackage.CLAUSE__NAME:
				setName(NAME_EDEFAULT);
				return;
			case JabutiPackage.CLAUSE__OPERATION:
				setOperation(OPERATION_EDEFAULT);
				return;
			case JabutiPackage.CLAUSE__CONDITION:
				setCondition((Condition)null);
				return;
			case JabutiPackage.CLAUSE__ON_BREACH:
				setOnBreach((OnBreach)null);
				return;
			case JabutiPackage.CLAUSE__ON_SUCCESS:
				setOnSuccess((OnSuccess)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case JabutiPackage.CLAUSE__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case JabutiPackage.CLAUSE__OPERATION:
				return operation != OPERATION_EDEFAULT;
			case JabutiPackage.CLAUSE__CONDITION:
				return condition != null;
			case JabutiPackage.CLAUSE__ON_BREACH:
				return onBreach != null;
			case JabutiPackage.CLAUSE__ON_SUCCESS:
				return onSuccess != null;
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", operation: ");
		result.append(operation);
		result.append(')');
		return result.toString();
	}

} //ClauseImpl
