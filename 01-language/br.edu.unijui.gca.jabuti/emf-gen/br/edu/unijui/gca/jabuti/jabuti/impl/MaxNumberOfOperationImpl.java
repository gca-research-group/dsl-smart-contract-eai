/**
 * generated by Xtext 2.28.0
 */
package br.edu.unijui.gca.jabuti.jabuti.impl;

import br.edu.unijui.gca.jabuti.jabuti.JabutiPackage;
import br.edu.unijui.gca.jabuti.jabuti.MaxNumberOfOperation;
import br.edu.unijui.gca.jabuti.jabuti.TimeUnitSpec;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Max Number Of Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.impl.MaxNumberOfOperationImpl#getOperationsNumber <em>Operations Number</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.impl.MaxNumberOfOperationImpl#getPerTime <em>Per Time</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MaxNumberOfOperationImpl extends TermImpl implements MaxNumberOfOperation
{
	/**
	 * The default value of the '{@link #getOperationsNumber() <em>Operations Number</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getOperationsNumber()
	 * @generated
	 * @ordered
	 */
	protected static final int OPERATIONS_NUMBER_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getOperationsNumber() <em>Operations Number</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getOperationsNumber()
	 * @generated
	 * @ordered
	 */
	protected int operationsNumber = OPERATIONS_NUMBER_EDEFAULT;

	/**
	 * The cached value of the '{@link #getPerTime() <em>Per Time</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPerTime()
	 * @generated
	 * @ordered
	 */
	protected TimeUnitSpec perTime;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxNumberOfOperationImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return JabutiPackage.Literals.MAX_NUMBER_OF_OPERATION;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int getOperationsNumber()
	{
		return operationsNumber;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setOperationsNumber(int newOperationsNumber)
	{
		int oldOperationsNumber = operationsNumber;
		operationsNumber = newOperationsNumber;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.MAX_NUMBER_OF_OPERATION__OPERATIONS_NUMBER, oldOperationsNumber, operationsNumber));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public TimeUnitSpec getPerTime()
	{
		return perTime;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetPerTime(TimeUnitSpec newPerTime, NotificationChain msgs)
	{
		TimeUnitSpec oldPerTime = perTime;
		perTime = newPerTime;
		if (eNotificationRequired())
		{
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME, oldPerTime, newPerTime);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setPerTime(TimeUnitSpec newPerTime)
	{
		if (newPerTime != perTime)
		{
			NotificationChain msgs = null;
			if (perTime != null)
				msgs = ((InternalEObject)perTime).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME, null, msgs);
			if (newPerTime != null)
				msgs = ((InternalEObject)newPerTime).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME, null, msgs);
			msgs = basicSetPerTime(newPerTime, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME, newPerTime, newPerTime));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
	{
		switch (featureID)
		{
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME:
				return basicSetPerTime(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__OPERATIONS_NUMBER:
				return getOperationsNumber();
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME:
				return getPerTime();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__OPERATIONS_NUMBER:
				setOperationsNumber((Integer)newValue);
				return;
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME:
				setPerTime((TimeUnitSpec)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__OPERATIONS_NUMBER:
				setOperationsNumber(OPERATIONS_NUMBER_EDEFAULT);
				return;
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME:
				setPerTime((TimeUnitSpec)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__OPERATIONS_NUMBER:
				return operationsNumber != OPERATIONS_NUMBER_EDEFAULT;
			case JabutiPackage.MAX_NUMBER_OF_OPERATION__PER_TIME:
				return perTime != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString()
	{
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (operationsNumber: ");
		result.append(operationsNumber);
		result.append(')');
		return result.toString();
	}

} //MaxNumberOfOperationImpl
