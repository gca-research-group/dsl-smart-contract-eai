/**
 * generated by Xtext 2.28.0
 */
package br.edu.unijui.gca.jabuti.jabuti;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Conditional Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getExpressionTerm <em>Expression Term</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getComparisonOperator <em>Comparison Operator</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getLogicalOperator <em>Logical Operator</em>}</li>
 * </ul>
 *
 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression()
 * @model
 * @generated
 */
public interface ConditionalExpression extends ExpressionTerm
{
	/**
	 * Returns the value of the '<em><b>Expression Term</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Expression Term</em>' containment reference.
	 * @see #setExpressionTerm(ExpressionTerm)
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_ExpressionTerm()
	 * @model containment="true" required="true"
	 * @generated
	 */
	ExpressionTerm getExpressionTerm();

	/**
	 * Sets the value of the '{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getExpressionTerm <em>Expression Term</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Expression Term</em>' containment reference.
	 * @see #getExpressionTerm()
	 * @generated
	 */
	void setExpressionTerm(ExpressionTerm value);

	/**
	 * Returns the value of the '<em><b>Comparison Operator</b></em>' containment reference list.
	 * The list contents are of type {@link br.edu.unijui.gca.jabuti.jabuti.ComparisonOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Comparison Operator</em>' containment reference list.
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_ComparisonOperator()
	 * @model containment="true"
	 * @generated
	 */
	EList<ComparisonOperator> getComparisonOperator();

	/**
	 * Returns the value of the '<em><b>Logical Operator</b></em>' containment reference list.
	 * The list contents are of type {@link br.edu.unijui.gca.jabuti.jabuti.LogicalOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Logical Operator</em>' containment reference list.
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_LogicalOperator()
	 * @model containment="true"
	 * @generated
	 */
	EList<LogicalOperator> getLogicalOperator();

} // ConditionalExpression
