/**
 * generated by Xtext 2.28.0
 */
package br.edu.unijui.gca.jabuti.jabuti;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Conditional Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getConditionTerm <em>Condition Term</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getConditionParam <em>Condition Param</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getAfterSymbol <em>After Symbol</em>}</li>
 *   <li>{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getBeforeSymbol <em>Before Symbol</em>}</li>
 * </ul>
 *
 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression()
 * @model
 * @generated
 */
public interface ConditionalExpression extends EObject
{
	/**
	 * Returns the value of the '<em><b>Condition Term</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition Term</em>' containment reference.
	 * @see #setConditionTerm(ConditionTerm)
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_ConditionTerm()
	 * @model containment="true"
	 * @generated
	 */
	ConditionTerm getConditionTerm();

	/**
	 * Sets the value of the '{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getConditionTerm <em>Condition Term</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Condition Term</em>' containment reference.
	 * @see #getConditionTerm()
	 * @generated
	 */
	void setConditionTerm(ConditionTerm value);

	/**
	 * Returns the value of the '<em><b>Condition Param</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Condition Param</em>' containment reference.
	 * @see #setConditionParam(ConditionTerm)
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_ConditionParam()
	 * @model containment="true"
	 * @generated
	 */
	ConditionTerm getConditionParam();

	/**
	 * Sets the value of the '{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getConditionParam <em>Condition Param</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Condition Param</em>' containment reference.
	 * @see #getConditionParam()
	 * @generated
	 */
	void setConditionParam(ConditionTerm value);

	/**
	 * Returns the value of the '<em><b>After Symbol</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>After Symbol</em>' containment reference.
	 * @see #setAfterSymbol(LogicalOperator)
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_AfterSymbol()
	 * @model containment="true"
	 * @generated
	 */
	LogicalOperator getAfterSymbol();

	/**
	 * Sets the value of the '{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getAfterSymbol <em>After Symbol</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>After Symbol</em>' containment reference.
	 * @see #getAfterSymbol()
	 * @generated
	 */
	void setAfterSymbol(LogicalOperator value);

	/**
	 * Returns the value of the '<em><b>Before Symbol</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Before Symbol</em>' containment reference.
	 * @see #setBeforeSymbol(LogicalOperator)
	 * @see br.edu.unijui.gca.jabuti.jabuti.JabutiPackage#getConditionalExpression_BeforeSymbol()
	 * @model containment="true"
	 * @generated
	 */
	LogicalOperator getBeforeSymbol();

	/**
	 * Sets the value of the '{@link br.edu.unijui.gca.jabuti.jabuti.ConditionalExpression#getBeforeSymbol <em>Before Symbol</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Before Symbol</em>' containment reference.
	 * @see #getBeforeSymbol()
	 * @generated
	 */
	void setBeforeSymbol(LogicalOperator value);

} // ConditionalExpression
