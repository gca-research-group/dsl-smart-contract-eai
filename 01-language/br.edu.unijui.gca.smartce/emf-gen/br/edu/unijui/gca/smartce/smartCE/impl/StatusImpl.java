/**
 * generated by Xtext 2.25.0
 */
package br.edu.unijui.gca.smartce.smartCE.impl;

import br.edu.unijui.gca.smartce.smartCE.SmartCEPackage;
import br.edu.unijui.gca.smartce.smartCE.Status;

import java.util.Date;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Status</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.StatusImpl#isActive <em>Active</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.StatusImpl#isRunning <em>Running</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.StatusImpl#getCurrentClause <em>Current Clause</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.StatusImpl#getRemainingTime <em>Remaining Time</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatusImpl extends MinimalEObjectImpl.Container implements Status
{
	/**
	 * The default value of the '{@link #isActive() <em>Active</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isActive()
	 * @generated
	 * @ordered
	 */
	protected static final boolean ACTIVE_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isActive() <em>Active</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isActive()
	 * @generated
	 * @ordered
	 */
	protected boolean active = ACTIVE_EDEFAULT;

	/**
	 * The default value of the '{@link #isRunning() <em>Running</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isRunning()
	 * @generated
	 * @ordered
	 */
	protected static final boolean RUNNING_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isRunning() <em>Running</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isRunning()
	 * @generated
	 * @ordered
	 */
	protected boolean running = RUNNING_EDEFAULT;

	/**
	 * The default value of the '{@link #getCurrentClause() <em>Current Clause</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrentClause()
	 * @generated
	 * @ordered
	 */
	protected static final int CURRENT_CLAUSE_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getCurrentClause() <em>Current Clause</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getCurrentClause()
	 * @generated
	 * @ordered
	 */
	protected int currentClause = CURRENT_CLAUSE_EDEFAULT;

	/**
	 * The default value of the '{@link #getRemainingTime() <em>Remaining Time</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRemainingTime()
	 * @generated
	 * @ordered
	 */
	protected static final Date REMAINING_TIME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getRemainingTime() <em>Remaining Time</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRemainingTime()
	 * @generated
	 * @ordered
	 */
	protected Date remainingTime = REMAINING_TIME_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatusImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return SmartCEPackage.Literals.STATUS;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isActive()
	{
		return active;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setActive(boolean newActive)
	{
		boolean oldActive = active;
		active = newActive;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.STATUS__ACTIVE, oldActive, active));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isRunning()
	{
		return running;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setRunning(boolean newRunning)
	{
		boolean oldRunning = running;
		running = newRunning;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.STATUS__RUNNING, oldRunning, running));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int getCurrentClause()
	{
		return currentClause;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setCurrentClause(int newCurrentClause)
	{
		int oldCurrentClause = currentClause;
		currentClause = newCurrentClause;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.STATUS__CURRENT_CLAUSE, oldCurrentClause, currentClause));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Date getRemainingTime()
	{
		return remainingTime;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setRemainingTime(Date newRemainingTime)
	{
		Date oldRemainingTime = remainingTime;
		remainingTime = newRemainingTime;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.STATUS__REMAINING_TIME, oldRemainingTime, remainingTime));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case SmartCEPackage.STATUS__ACTIVE:
				return isActive();
			case SmartCEPackage.STATUS__RUNNING:
				return isRunning();
			case SmartCEPackage.STATUS__CURRENT_CLAUSE:
				return getCurrentClause();
			case SmartCEPackage.STATUS__REMAINING_TIME:
				return getRemainingTime();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case SmartCEPackage.STATUS__ACTIVE:
				setActive((Boolean)newValue);
				return;
			case SmartCEPackage.STATUS__RUNNING:
				setRunning((Boolean)newValue);
				return;
			case SmartCEPackage.STATUS__CURRENT_CLAUSE:
				setCurrentClause((Integer)newValue);
				return;
			case SmartCEPackage.STATUS__REMAINING_TIME:
				setRemainingTime((Date)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.STATUS__ACTIVE:
				setActive(ACTIVE_EDEFAULT);
				return;
			case SmartCEPackage.STATUS__RUNNING:
				setRunning(RUNNING_EDEFAULT);
				return;
			case SmartCEPackage.STATUS__CURRENT_CLAUSE:
				setCurrentClause(CURRENT_CLAUSE_EDEFAULT);
				return;
			case SmartCEPackage.STATUS__REMAINING_TIME:
				setRemainingTime(REMAINING_TIME_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.STATUS__ACTIVE:
				return active != ACTIVE_EDEFAULT;
			case SmartCEPackage.STATUS__RUNNING:
				return running != RUNNING_EDEFAULT;
			case SmartCEPackage.STATUS__CURRENT_CLAUSE:
				return currentClause != CURRENT_CLAUSE_EDEFAULT;
			case SmartCEPackage.STATUS__REMAINING_TIME:
				return REMAINING_TIME_EDEFAULT == null ? remainingTime != null : !REMAINING_TIME_EDEFAULT.equals(remainingTime);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString()
	{
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (active: ");
		result.append(active);
		result.append(", running: ");
		result.append(running);
		result.append(", currentClause: ");
		result.append(currentClause);
		result.append(", remainingTime: ");
		result.append(remainingTime);
		result.append(')');
		return result.toString();
	}

} //StatusImpl
