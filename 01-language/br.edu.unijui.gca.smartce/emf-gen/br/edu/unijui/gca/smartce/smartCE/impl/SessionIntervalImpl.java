/**
 * generated by Xtext 2.25.0
 */
package br.edu.unijui.gca.smartce.smartCE.impl;

import br.edu.unijui.gca.smartce.smartCE.Recurrence;
import br.edu.unijui.gca.smartce.smartCE.SessionInterval;
import br.edu.unijui.gca.smartce.smartCE.SmartCEPackage;
import br.edu.unijui.gca.smartce.smartCE.TimeUnit;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Session Interval</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SessionIntervalImpl#getStart <em>Start</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SessionIntervalImpl#getEnd <em>End</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SessionIntervalImpl#getFrequency <em>Frequency</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SessionIntervalImpl#getTimeUnit <em>Time Unit</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SessionIntervalImpl#getRecurrence <em>Recurrence</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SessionIntervalImpl extends BusinessRuleImpl implements SessionInterval
{
	/**
	 * The default value of the '{@link #getStart() <em>Start</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStart()
	 * @generated
	 * @ordered
	 */
	protected static final String START_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getStart() <em>Start</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStart()
	 * @generated
	 * @ordered
	 */
	protected String start = START_EDEFAULT;

	/**
	 * The default value of the '{@link #getEnd() <em>End</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEnd()
	 * @generated
	 * @ordered
	 */
	protected static final String END_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getEnd() <em>End</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEnd()
	 * @generated
	 * @ordered
	 */
	protected String end = END_EDEFAULT;

	/**
	 * The default value of the '{@link #getFrequency() <em>Frequency</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getFrequency()
	 * @generated
	 * @ordered
	 */
	protected static final int FREQUENCY_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getFrequency() <em>Frequency</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getFrequency()
	 * @generated
	 * @ordered
	 */
	protected int frequency = FREQUENCY_EDEFAULT;

	/**
	 * The default value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTimeUnit()
	 * @generated
	 * @ordered
	 */
	protected static final TimeUnit TIME_UNIT_EDEFAULT = TimeUnit.SECOND;

	/**
	 * The cached value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTimeUnit()
	 * @generated
	 * @ordered
	 */
	protected TimeUnit timeUnit = TIME_UNIT_EDEFAULT;

	/**
	 * The default value of the '{@link #getRecurrence() <em>Recurrence</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRecurrence()
	 * @generated
	 * @ordered
	 */
	protected static final Recurrence RECURRENCE_EDEFAULT = Recurrence.RECURRING;

	/**
	 * The cached value of the '{@link #getRecurrence() <em>Recurrence</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRecurrence()
	 * @generated
	 * @ordered
	 */
	protected Recurrence recurrence = RECURRENCE_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SessionIntervalImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return SmartCEPackage.Literals.SESSION_INTERVAL;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getStart()
	{
		return start;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setStart(String newStart)
	{
		String oldStart = start;
		start = newStart;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SESSION_INTERVAL__START, oldStart, start));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getEnd()
	{
		return end;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setEnd(String newEnd)
	{
		String oldEnd = end;
		end = newEnd;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SESSION_INTERVAL__END, oldEnd, end));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int getFrequency()
	{
		return frequency;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setFrequency(int newFrequency)
	{
		int oldFrequency = frequency;
		frequency = newFrequency;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SESSION_INTERVAL__FREQUENCY, oldFrequency, frequency));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public TimeUnit getTimeUnit()
	{
		return timeUnit;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setTimeUnit(TimeUnit newTimeUnit)
	{
		TimeUnit oldTimeUnit = timeUnit;
		timeUnit = newTimeUnit == null ? TIME_UNIT_EDEFAULT : newTimeUnit;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SESSION_INTERVAL__TIME_UNIT, oldTimeUnit, timeUnit));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Recurrence getRecurrence()
	{
		return recurrence;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setRecurrence(Recurrence newRecurrence)
	{
		Recurrence oldRecurrence = recurrence;
		recurrence = newRecurrence == null ? RECURRENCE_EDEFAULT : newRecurrence;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SESSION_INTERVAL__RECURRENCE, oldRecurrence, recurrence));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case SmartCEPackage.SESSION_INTERVAL__START:
				return getStart();
			case SmartCEPackage.SESSION_INTERVAL__END:
				return getEnd();
			case SmartCEPackage.SESSION_INTERVAL__FREQUENCY:
				return getFrequency();
			case SmartCEPackage.SESSION_INTERVAL__TIME_UNIT:
				return getTimeUnit();
			case SmartCEPackage.SESSION_INTERVAL__RECURRENCE:
				return getRecurrence();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case SmartCEPackage.SESSION_INTERVAL__START:
				setStart((String)newValue);
				return;
			case SmartCEPackage.SESSION_INTERVAL__END:
				setEnd((String)newValue);
				return;
			case SmartCEPackage.SESSION_INTERVAL__FREQUENCY:
				setFrequency((Integer)newValue);
				return;
			case SmartCEPackage.SESSION_INTERVAL__TIME_UNIT:
				setTimeUnit((TimeUnit)newValue);
				return;
			case SmartCEPackage.SESSION_INTERVAL__RECURRENCE:
				setRecurrence((Recurrence)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.SESSION_INTERVAL__START:
				setStart(START_EDEFAULT);
				return;
			case SmartCEPackage.SESSION_INTERVAL__END:
				setEnd(END_EDEFAULT);
				return;
			case SmartCEPackage.SESSION_INTERVAL__FREQUENCY:
				setFrequency(FREQUENCY_EDEFAULT);
				return;
			case SmartCEPackage.SESSION_INTERVAL__TIME_UNIT:
				setTimeUnit(TIME_UNIT_EDEFAULT);
				return;
			case SmartCEPackage.SESSION_INTERVAL__RECURRENCE:
				setRecurrence(RECURRENCE_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.SESSION_INTERVAL__START:
				return START_EDEFAULT == null ? start != null : !START_EDEFAULT.equals(start);
			case SmartCEPackage.SESSION_INTERVAL__END:
				return END_EDEFAULT == null ? end != null : !END_EDEFAULT.equals(end);
			case SmartCEPackage.SESSION_INTERVAL__FREQUENCY:
				return frequency != FREQUENCY_EDEFAULT;
			case SmartCEPackage.SESSION_INTERVAL__TIME_UNIT:
				return timeUnit != TIME_UNIT_EDEFAULT;
			case SmartCEPackage.SESSION_INTERVAL__RECURRENCE:
				return recurrence != RECURRENCE_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString()
	{
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (start: ");
		result.append(start);
		result.append(", end: ");
		result.append(end);
		result.append(", frequency: ");
		result.append(frequency);
		result.append(", timeUnit: ");
		result.append(timeUnit);
		result.append(", recurrence: ");
		result.append(recurrence);
		result.append(')');
		return result.toString();
	}

} //SessionIntervalImpl
