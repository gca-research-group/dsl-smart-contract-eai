/**
 * generated by Xtext 2.25.0
 */
package br.edu.unijui.gca.smartce.smartCE.impl;

import br.edu.unijui.gca.smartce.smartCE.SingleVariable;
import br.edu.unijui.gca.smartce.smartCE.SmartCEPackage;
import br.edu.unijui.gca.smartce.smartCE.ValueAndDescription;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Single Variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SingleVariableImpl#getName <em>Name</em>}</li>
 *   <li>{@link br.edu.unijui.gca.smartce.smartCE.impl.SingleVariableImpl#getValueAndDescription <em>Value And Description</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SingleVariableImpl extends MinimalEObjectImpl.Container implements SingleVariable
{
	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = "EString";

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getValueAndDescription() <em>Value And Description</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getValueAndDescription()
	 * @generated
	 * @ordered
	 */
	protected ValueAndDescription valueAndDescription;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleVariableImpl()
	{
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass()
	{
		return SmartCEPackage.Literals.SINGLE_VARIABLE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String getName()
	{
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setName(String newName)
	{
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SINGLE_VARIABLE__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ValueAndDescription getValueAndDescription()
	{
		return valueAndDescription;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetValueAndDescription(ValueAndDescription newValueAndDescription, NotificationChain msgs)
	{
		ValueAndDescription oldValueAndDescription = valueAndDescription;
		valueAndDescription = newValueAndDescription;
		if (eNotificationRequired())
		{
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION, oldValueAndDescription, newValueAndDescription);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setValueAndDescription(ValueAndDescription newValueAndDescription)
	{
		if (newValueAndDescription != valueAndDescription)
		{
			NotificationChain msgs = null;
			if (valueAndDescription != null)
				msgs = ((InternalEObject)valueAndDescription).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION, null, msgs);
			if (newValueAndDescription != null)
				msgs = ((InternalEObject)newValueAndDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION, null, msgs);
			msgs = basicSetValueAndDescription(newValueAndDescription, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION, newValueAndDescription, newValueAndDescription));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
	{
		switch (featureID)
		{
			case SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION:
				return basicSetValueAndDescription(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType)
	{
		switch (featureID)
		{
			case SmartCEPackage.SINGLE_VARIABLE__NAME:
				return getName();
			case SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION:
				return getValueAndDescription();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eSet(int featureID, Object newValue)
	{
		switch (featureID)
		{
			case SmartCEPackage.SINGLE_VARIABLE__NAME:
				setName((String)newValue);
				return;
			case SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION:
				setValueAndDescription((ValueAndDescription)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.SINGLE_VARIABLE__NAME:
				setName(NAME_EDEFAULT);
				return;
			case SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION:
				setValueAndDescription((ValueAndDescription)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID)
	{
		switch (featureID)
		{
			case SmartCEPackage.SINGLE_VARIABLE__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case SmartCEPackage.SINGLE_VARIABLE__VALUE_AND_DESCRIPTION:
				return valueAndDescription != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString()
	{
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(')');
		return result.toString();
	}

} //SingleVariableImpl
